{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/CategoryVegetables.js\";\nimport React, { useState, useEffect } from 'react';\nimport ArticleSelectorFlex from './ArticleSelector';\nexport default function CategoryVegetables({\n  articles,\n  shoppingListIdState,\n  amounts\n}) {\n  // how about a query that sends all the required article IDs from the\n  // respective category to the backend, in order to \n  // useEffect(() => {\n  //   fetch('http://shoppinglist-app.local/////////////////////////////////////////////////')\n  //   .then(response => response.json())\n  //   .then((data) => setAmounts(data))\n  // }, []);\n  const vegetables = articles.filter(article => article.articlecategory === \"0\"); // const itemsInShoppingList = amounts.filter((item) => item.shoppinglistid === shoppingListIdState);\n  // const vegetablesAmountsArray = [];\n  // .map((vegetable) => {\n  //     if (amounts.shoppinglistid === {shoppingListId}) {\n  //     } \n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: vegetables.map(vegetable => /*#__PURE__*/_jsxDEV(ArticleSelectorFlex, {\n      description: vegetable.articledescription,\n      amount: Math.floor(Math.random() * 4)\n    }, vegetable.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n}\n_c = CategoryVegetables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryVegetables\");","map":{"version":3,"sources":["/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/CategoryVegetables.js"],"names":["React","useState","useEffect","ArticleSelectorFlex","CategoryVegetables","articles","shoppingListIdState","amounts","vegetables","filter","article","articlecategory","map","vegetable","articledescription","Math","floor","random","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,mBAAhC;AAEA,eAAe,SAASC,kBAAT,CAA6B;AAACC,EAAAA,QAAD;AAAWC,EAAAA,mBAAX;AAAgCC,EAAAA;AAAhC,CAA7B,EAAuE;AAGlF;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,QAAMC,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,eAAR,KAA4B,GAAzD,CAAnB,CAZkF,CAclF;AAEA;AACA;AACA;AACA;AACA;;AAGI,sBACI;AAAA,cACKH,UAAU,CAACI,GAAX,CAAgBC,SAAD,iBACZ,QAAC,mBAAD;AAEI,MAAA,WAAW,EAAEA,SAAS,CAACC,kBAF3B;AAGI,MAAA,MAAM,EAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B;AAHd,OACSJ,SAAS,CAACK,EADnB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWP;KAlCuBd,kB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ArticleSelectorFlex from './ArticleSelector';\n\nexport default function CategoryVegetables ({articles, shoppingListIdState, amounts}) {\n    \n\n    // how about a query that sends all the required article IDs from the\n    // respective category to the backend, in order to \n  \n    // useEffect(() => {\n    //   fetch('http://shoppinglist-app.local/////////////////////////////////////////////////')\n    //   .then(response => response.json())\n    //   .then((data) => setAmounts(data))\n    // }, []);\n      \n    const vegetables = articles.filter((article) => article.articlecategory === \"0\");\n\n    // const itemsInShoppingList = amounts.filter((item) => item.shoppinglistid === shoppingListIdState);\n\n    // const vegetablesAmountsArray = [];\n    // .map((vegetable) => {\n    //     if (amounts.shoppinglistid === {shoppingListId}) {\n    //     } \n    // });\n    \n\n        return (\n            <div>\n                {vegetables.map((vegetable) =>\n                    <ArticleSelectorFlex \n                        key={vegetable.id}\n                        description={vegetable.articledescription}\n                        amount = {Math.floor(Math.random() * 4)}>\n                </ArticleSelectorFlex>)}\n            </div>\n        )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}