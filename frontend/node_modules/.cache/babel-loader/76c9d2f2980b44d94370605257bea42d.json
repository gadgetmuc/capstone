{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/ArticleSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nexport default function ArticleSelector({\n  description,\n  amount\n}) {\n  _s();\n\n  // this is a hardcoded amount, since the backend doesn't work properly!\n  const hardcodedAmount = Math.floor(Math.random() * 4);\n  const [amountState, setAmountState] = useState(hardcodedAmount);\n\n  const minusButton = () => {\n    if (amountState > 0) {\n      setAmountState(amountState - 1);\n    }\n  };\n\n  const plusButton = () => {\n    if (amountState < 10) {\n      setAmountState(amountState + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ArticleSelectorFlex, {\n      children: [/*#__PURE__*/_jsxDEV(ArticleSelectorDescription, {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAmountState(amountState - 1),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArticleSelectorAmount, {\n        children: amountState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setAmountState(amountState + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArticleSelector, \"1eOv91eIMhlDGfyv+aTrjseDrG4=\");\n\n_c = ArticleSelector;\n\nconst ArticleSelectorFlex = _styled.div.withConfig({\n  displayName: \"ArticleSelector__ArticleSelectorFlex\",\n  componentId: \"sc-97ra9t-0\"\n})([\"display:flex;color:red;justify-content:space-between;height:15vw;width:70hw;color:#111;margin-bottom:5px;border-radius:5px;background-image:linear-gradient(ivory,papayawhip);padding-left:5px;\"]);\n\nconst ArticleSelectorDescription = _styled.span.withConfig({\n  displayName: \"ArticleSelector__ArticleSelectorDescription\",\n  componentId: \"sc-97ra9t-1\"\n})([\"display:flex;flex-flow:column wrap;justify-content:center;align-items:bottom;width:70%;\"]);\n\nconst ArticleSelectorAmount = _styled.span.withConfig({\n  displayName: \"ArticleSelector__ArticleSelectorAmount\",\n  componentId: \"sc-97ra9t-2\"\n})([\"display:flex;flex-direction:column;width:3rem;justify-content:center;align-items:center;\"]);\n\nconst minusButtonAlert = `This button lowers a variable value which will be sent to the database when the close button gets pressed. The value will be initiated at the time the overlay comes up, and get the value of the according useState.`;\nconst plusButtonAlert = `This button raises a variable value which will be sent to the database when the close button gets pressed. The value will be initiated at the time the overlay comes up, and get the value of the according useState.`; //// Fetching the shoppingLists amounts into the ArticleSelector does not work bc the database structure was built wrong. \n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleSelector\");","map":{"version":3,"sources":["/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/ArticleSelector.js"],"names":["React","useState","useEffect","ArticleSelector","description","amount","hardcodedAmount","Math","floor","random","amountState","setAmountState","minusButton","plusButton","ArticleSelectorFlex","styled","div","ArticleSelectorDescription","span","ArticleSelectorAmount","minusButtonAlert","plusButtonAlert"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAIA,eAAe,SAASC,eAAT,CAA0B;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAA1B,EAAiD;AAAA;;AAE5D;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACK,eAAD,CAA9C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtB,QAAIF,WAAW,GAAG,CAAlB,EAAqB;AACjBC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH;AACJ,GAJD;;AAMA,QAAMG,UAAU,GAAG,MAAM;AACrB,QAAIH,WAAW,GAAG,EAAlB,EAAsB;AAClBC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH;AACJ,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,mBAAD;AAAA,8BACI,QAAC,0BAAD;AAAA,kBACKN;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,MAAMO,cAAc,CAACD,WAAW,GAAG,CAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,qBAAD;AAAA,kBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAE,MAAMC,cAAc,CAACD,WAAW,GAAG,CAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA/BuBP,e;;KAAAA,e;;AAoCxB,MAAMW,mBAAmB,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,uMAAzB;;AAaA,MAAMC,0BAA0B,GAAGF,OAAM,CAACG,IAAV;AAAA;AAAA;AAAA,+FAAhC;;AAQA,MAAMC,qBAAqB,GAAGJ,OAAM,CAACG,IAAV;AAAA;AAAA;AAAA,gGAA3B;;AAQA,MAAME,gBAAgB,GAAI,uNAA1B;AAEA,MAAMC,eAAe,GAAI,uNAAzB,C,CAEA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components/macro';\n\n\nexport default function ArticleSelector ({description, amount}) {\n\n    // this is a hardcoded amount, since the backend doesn't work properly!\n    const hardcodedAmount = Math.floor(Math.random() * 4);\n\n    const [amountState, setAmountState] = useState(hardcodedAmount); \n\n    const minusButton = () => {\n        if (amountState > 0) {\n            setAmountState(amountState - 1);\n        }\n    }\n\n    const plusButton = () => {\n        if (amountState < 10) {\n            setAmountState(amountState + 1);\n        }\n    }\n    \n    return (\n        <div>            \n            <ArticleSelectorFlex>\n                <ArticleSelectorDescription>\n                    {description}\n                </ArticleSelectorDescription>\n                <button onClick={() => setAmountState(amountState - 1)}>-</button>\n                <ArticleSelectorAmount>{amountState}</ArticleSelectorAmount>\n                <button onClick={() => setAmountState(amountState + 1)}>+</button>\n            </ArticleSelectorFlex>\n        </div>\n    )\n}\n\n\n\n\nconst ArticleSelectorFlex = styled.div`\n    display: flex;\n    color: red;\n    justify-content: space-between;\n    height: 15vw;\n    width: 70hw;\n    color: #111;\n    margin-bottom: 5px;\n    border-radius: 5px;\n    background-image: linear-gradient(ivory, papayawhip);\n    padding-left: 5px;\n`\n\nconst ArticleSelectorDescription = styled.span`\n    display: flex;\n    flex-flow: column wrap;\n    justify-content: center;\n    align-items: bottom;\n    // background-color: hotpink;\n    width: 70%;\n`\nconst ArticleSelectorAmount = styled.span`\n    display: flex;\n    flex-direction: column;\n    width: 3rem;\n    justify-content: center;\n    align-items: center;\n\n`\nconst minusButtonAlert = `This button lowers a variable value which will be sent to the database when the close button gets pressed. The value will be initiated at the time the overlay comes up, and get the value of the according useState.`\n\nconst plusButtonAlert = `This button raises a variable value which will be sent to the database when the close button gets pressed. The value will be initiated at the time the overlay comes up, and get the value of the according useState.`\n\n//// Fetching the shoppingLists amounts into the ArticleSelector does not work bc the database structure was built wrong. "]},"metadata":{},"sourceType":"module"}