{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/CategoryVegetables.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArticleSelectorFlex from './ArticleSelector';\nexport default function CategoryVegetables({\n  articles,\n  shoppingListIdState\n}) {\n  _s();\n\n  const [amounts, setAmounts] = useState([]); // how about a query that sends all the required article IDs from the\n  // respective category to the backend, in order to \n  // useEffect(() => {\n  //   fetch('http://shoppinglist-app.local/////////////////////////////////////////////////')\n  //   .then(response => response.json())\n  //   .then((data) => setAmounts(data))\n  // }, []);\n\n  const vegetables = articles.filter(article => article.articlecategory === \"0\");\n  const itemsInShoppingList = amounts.filter(item => item.shoppinglistid === shoppingListIdState);\n  const vegetablesAmountsArray = []; // .map((vegetable) => {\n  //     if (amounts.shoppinglistid === {shoppingListId}) {\n  //     } \n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: vegetables.map(vegetable => /*#__PURE__*/_jsxDEV(ArticleSelectorFlex, {\n      description: vegetable.articledescription,\n      amount: amounts.amount\n    }, vegetable.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CategoryVegetables, \"auR+x9he/o6N2O4fnTwuE76Yy0A=\");\n\n_c = CategoryVegetables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryVegetables\");","map":{"version":3,"sources":["/Users/test/Development/neuefische/muc-2020-w1/capstone/frontend/src/CategoryVegetables.js"],"names":["React","useState","useEffect","ArticleSelectorFlex","CategoryVegetables","articles","shoppingListIdState","amounts","setAmounts","vegetables","filter","article","articlecategory","itemsInShoppingList","item","shoppinglistid","vegetablesAmountsArray","map","vegetable","articledescription","amount","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,mBAAhC;AAEA,eAAe,SAASC,kBAAT,CAA6B;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAA7B,EAA8D;AAAA;;AAEzE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAFyE,CAIzE;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,UAAU,GAAGJ,QAAQ,CAACK,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,eAAR,KAA4B,GAAzD,CAAnB;AAEA,QAAMC,mBAAmB,GAAGN,OAAO,CAACG,MAAR,CAAgBI,IAAD,IAAUA,IAAI,CAACC,cAAL,KAAwBT,mBAAjD,CAA5B;AAEA,QAAMU,sBAAsB,GAAG,EAA/B,CAjByE,CAkBzE;AACA;AACA;AACA;;AAGI,sBACI;AAAA,cACKP,UAAU,CAACQ,GAAX,CAAgBC,SAAD,iBACZ,QAAC,mBAAD;AAEI,MAAA,WAAW,EAAEA,SAAS,CAACC,kBAF3B;AAGI,MAAA,MAAM,EAAIZ,OAAO,CAACa;AAHtB,OACSF,SAAS,CAACG,EADnB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWP;;GAnCuBjB,kB;;KAAAA,kB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ArticleSelectorFlex from './ArticleSelector';\n\nexport default function CategoryVegetables ({articles, shoppingListIdState}) {\n    \n    const [amounts, setAmounts] = useState([]);\n\n    // how about a query that sends all the required article IDs from the\n    // respective category to the backend, in order to \n  \n    // useEffect(() => {\n    //   fetch('http://shoppinglist-app.local/////////////////////////////////////////////////')\n    //   .then(response => response.json())\n    //   .then((data) => setAmounts(data))\n    // }, []);\n      \n    const vegetables = articles.filter((article) => article.articlecategory === \"0\");\n\n    const itemsInShoppingList = amounts.filter((item) => item.shoppinglistid === shoppingListIdState);\n\n    const vegetablesAmountsArray = [];\n    // .map((vegetable) => {\n    //     if (amounts.shoppinglistid === {shoppingListId}) {\n    //     } \n    // });\n    \n\n        return (\n            <div>\n                {vegetables.map((vegetable) =>\n                    <ArticleSelectorFlex \n                        key={vegetable.id}\n                        description={vegetable.articledescription}\n                        amount = {amounts.amount}>\n                </ArticleSelectorFlex>)}\n            </div>\n        )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}